You are the Replit Core AI Agent. Scaffold the full PeerLearn platform‚ÄîDjango+DRF+Channels+SQLite3+Redis+Celery+WebRTC+Razorpay+TailwindCSS+Alpine.js‚Äîso that ‚Äúreplit run‚Äù yields a production-ready app. Key deliverables:

1. AUTH & ROUTING  
   ‚Ä¢ Auth-Selector modal (Learner vs Mentor)  
   ‚Ä¢ Learner signup (4-step wizard); Mentor signup (5-step wizard); Admin login  
   ‚Ä¢ Role-guarded dashboards and session routes

2. MENTOR DASHBOARD ‚Üí MY SESSIONS (/dashboard/mentor/my-sessions)  
   ‚Ä¢ Tabs: Today, Upcoming, Past  
   ‚Ä¢ Cards: title, schedule, countdown, ‚ÄúBooked (N)‚Äù badge  
   ‚Ä¢ Buttons: Go Live ‚ñ∂ (T‚àí15 min), Enter Room ‚ñ∂ (after booking), Edit ‚úé, Cancel üóë  
   ‚Ä¢ Real-Time WS: sessions:{mentor_id} & sessions:{session_id} for new_booking, session.live, learner.join/leave  
   ‚Ä¢ Actions: go_live endpoint, authorize_join endpoint, edit/cancel endpoints  
   ‚Ä¢ Error handling: network retries, validation toasts, disabled tooltips

3. LEARNER DASHBOARD ‚Üí SESSIONS & ACTIVITY (/dashboard/learner)  
   ‚Ä¢ Tabs: Recommended, Scheduled, Live Now; Activity sub-tabs: Requests, Bookings  
   ‚Ä¢ Book ‚ñ∂ and Join ‚ñ∂ flows with Razorpay, booking creation, authorization, real-time toasts via WS  
   ‚Ä¢ Carousel & grid layouts, ML recommendations, search/filter UX

4. WEBRTC ROOM (/session/{room_code})  
   ‚Ä¢ Pre-live lobby; Start Session ‚ñ∂ by mentor or auto on session.live  
   ‚Ä¢ Peer signaling via Channels; STUN/TURN fallback; media error fallbacks  
   ‚Ä¢ Zoom-style UI: dual video, toolbar (mute, video toggle, screen-share, chat, whiteboard, end), reconnect logic  
   ‚Ä¢ Post-session feedback & resource upload; session.end broadcast

5. NOTIFICATIONS & TOASTER  
   ‚Ä¢ Channels: requests:{mentor_id}, responses:{learner_id}, sessions:{room_code}, notifications:{user_id}  
   ‚Ä¢ Real-time toasts with actionable buttons

6. ADMIN DASHBOARD (/dashboard/admin)  
   ‚Ä¢ Manage users, sessions, payments, feedback with search, filters, ban/refund actions and real-time stats

7. UI/UX & ERROR HANDLING  
   ‚Ä¢ Desktop & mobile responsive (Tailwind + Alpine.js), skeleton loaders, spinner fallbacks  
   ‚Ä¢ Inline form validation, toast queue, retry modals, offline banner, ARIA accessibility

8. BACKEND & DEPLOY  
   ‚Ä¢ Models: CustomUser, Session, SessionRequest, Booking, Payment, Notification, Feedback  
   ‚Ä¢ Celery tasks: reminders & feedback prompts  
   ‚Ä¢ Docker Compose with Redis, Channels, STUN/TURN ENV, Razorpay keys  
   ‚Ä¢ Pytest coverage, flake8, black, isort

Generate all models, serializers, views, templates, consumers, static assets, and configuration to deliver this fully functional, real-time EdTech platform.