# Generated by Django 5.2.1 on 2025-05-13 06:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the session.', max_length=255)),
                ('description', models.TextField(help_text='Description of what will be covered in the session.')),
                ('topics', models.JSONField(default=list, help_text='List of topics that will be covered in this session.')),
                ('schedule', models.DateTimeField(help_text='Date and time when the session is scheduled.')),
                ('duration', models.PositiveIntegerField(default=60, help_text='Duration of the session in minutes.')),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='Price of the session (0 for free sessions).', max_digits=10)),
                ('room_code', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique code for the session room.', unique=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('live', 'Live'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', help_text='Current status of the session.', max_length=10)),
                ('max_participants', models.PositiveIntegerField(default=1, help_text='Maximum number of participants allowed (1 for one-to-one).')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the session was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the session was last updated.')),
                ('mentor', models.ForeignKey(help_text='The mentor hosting this session.', limit_choices_to={'role': 'mentor'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['-schedule'],
            },
        ),
        migrations.CreateModel(
            name='SessionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title or subject of the requested session.', max_length=255)),
                ('domain', models.CharField(help_text='Domain or category of the requested session.', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of what the learner wants to learn.')),
                ('proposed_time', models.DateTimeField(help_text='Proposed date and time for the session.')),
                ('duration', models.PositiveIntegerField(default=60, help_text='Proposed duration of the session in minutes.')),
                ('budget', models.DecimalField(decimal_places=2, default=0, help_text="Learner's budget for the session (0 for no budget specified).", max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('offered', 'Offered'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', help_text='Current status of the request.', max_length=10)),
                ('mentor_notes', models.TextField(blank=True, help_text='Notes from the mentor in response to the request.', null=True)),
                ('counter_offer', models.DecimalField(blank=True, decimal_places=2, help_text='Counter offer price from the mentor.', max_digits=10, null=True)),
                ('counter_time', models.DateTimeField(blank=True, help_text='Counter proposed time from the mentor.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the request was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the request was last updated.')),
                ('learner', models.ForeignKey(help_text='The learner who sent the request.', limit_choices_to={'role': 'learner'}, on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(help_text='The mentor who received the request.', limit_choices_to={'role': 'mentor'}, on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session Request',
                'verbose_name_plural': 'Session Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', help_text='Current status of the booking.', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the booking was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the booking was last updated.')),
                ('cancellation_reason', models.TextField(blank=True, help_text='Reason for cancellation if the booking was cancelled.', null=True)),
                ('feedback_submitted', models.BooleanField(default=False, help_text='Whether the learner has submitted feedback for this booking.')),
                ('learner', models.ForeignKey(help_text='The learner who booked the session.', limit_choices_to={'role': 'learner'}, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(help_text='The session that was booked.', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='learning_sessions.session')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
                'unique_together': {('session', 'learner')},
            },
        ),
    ]
